{"version":3,"file":"run_test_run_hooks.js","sourceRoot":"","sources":["../../src/runtime/run_test_run_hooks.ts"],"names":[],"mappings":";;;;;;AACA,2EAAgD;AAChD,kDAAqD;AACrD,oDAAgE;AAQzD,MAAM,mBAAmB,GAAG,CACjC,MAAe,EACf,cAAsB,EACtB,eAA2B,EAC3B,YAAwD,EACtC,EAAE,CACpB,MAAM;IACJ,CAAC,CAAC,KAAK,IAAI,EAAE,GAAE,CAAC;IAChB,CAAC,CAAC,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,EAAE;QAC1B,KAAK,MAAM,cAAc,IAAI,WAAW,EAAE;YACxC,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,0BAAc,CAAC,GAAG,CAAC;gBACzC,SAAS,EAAE,EAAE;gBACb,EAAE,EAAE,cAAc,CAAC,IAAI;gBACvB,OAAO,EAAE,EAAE,UAAU,EAAE,eAAe,EAAE;gBACxC,qBAAqB,EAAE,IAAA,8BAAc,EACnC,cAAc,CAAC,OAAO,CAAC,OAAO,EAC9B,cAAc,CACf;aACF,CAAC,CAAA;YACF,IAAI,IAAA,6BAAa,EAAC,KAAK,CAAC,EAAE;gBACxB,MAAM,QAAQ,GAAG,IAAA,wBAAc,EAAC,cAAc,CAAC,CAAA;gBAC/C,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAA;aAChE;SACF;IACH,CAAC,CAAA;AAxBM,QAAA,mBAAmB,uBAwBzB","sourcesContent":["import { JsonObject } from 'type-fest'\nimport UserCodeRunner from '../user_code_runner'\nimport { formatLocation } from '../formatter/helpers'\nimport { doesHaveValue, valueOrDefault } from '../value_checker'\nimport TestRunHookDefinition from '../models/test_run_hook_definition'\n\nexport type RunsTestRunHooks = (\n  definitions: TestRunHookDefinition[],\n  name: string\n) => Promise<void>\n\nexport const makeRunTestRunHooks = (\n  dryRun: boolean,\n  defaultTimeout: number,\n  worldParameters: JsonObject,\n  errorMessage: (name: string, location: string) => string\n): RunsTestRunHooks =>\n  dryRun\n    ? async () => {}\n    : async (definitions, name) => {\n        for (const hookDefinition of definitions) {\n          const { error } = await UserCodeRunner.run({\n            argsArray: [],\n            fn: hookDefinition.code,\n            thisArg: { parameters: worldParameters },\n            timeoutInMilliseconds: valueOrDefault(\n              hookDefinition.options.timeout,\n              defaultTimeout\n            ),\n          })\n          if (doesHaveValue(error)) {\n            const location = formatLocation(hookDefinition)\n            throw new Error(errorMessage(name, location), { cause: error })\n          }\n        }\n      }\n"]}