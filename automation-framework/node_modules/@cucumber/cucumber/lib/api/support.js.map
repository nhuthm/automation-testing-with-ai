{"version":3,"file":"support.js","sourceRoot":"","sources":["../../src/api/support.ts"],"names":[],"mappings":";;;;;;AAAA,uCAAwC;AAGxC,mGAAuE;AACvE,iEAAuC;AAGhC,KAAK,UAAU,qBAAqB,CAAC,EAC1C,MAAM,EACN,GAAG,EACH,KAAK,EACL,cAAc,EACd,YAAY,EACZ,WAAW,GAQZ;IACC,sCAAyB,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE;QAC1C,cAAc;QACd,YAAY;QACZ,WAAW;KACZ,CAAC,CAAA;IAEF,cAAc,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;QAC1B,MAAM,CAAC,KAAK,CAAC,oCAAoC,IAAI,GAAG,CAAC,CAAA;QACzD,IAAA,qBAAU,EAAC,IAAI,CAAC,CAAA;IAClB,CAAC,CAAC,CAAA;IACF,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;QACxB,MAAM,CAAC,KAAK,CAAC,oCAAoC,IAAI,GAAG,CAAC,CAAA;QACzD,IAAA,qBAAU,EAAC,IAAI,CAAC,CAAA;IAClB,CAAC,CAAC,CAAA;IAEF,KAAK,MAAM,IAAI,IAAI,WAAW,EAAE;QAC9B,MAAM,CAAC,KAAK,CAAC,mCAAmC,IAAI,GAAG,CAAC,CAAA;QACxD,MAAM,MAAM,CAAC,IAAA,wBAAa,EAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAA;KAC7C;IAED,OAAO,sCAAyB,CAAC,QAAQ,EAAE,CAAA;AAC7C,CAAC;AApCD,sDAoCC","sourcesContent":["import { pathToFileURL } from 'node:url'\nimport { IdGenerator } from '@cucumber/messages'\nimport { SupportCodeLibrary } from '../support_code_library_builder/types'\nimport supportCodeLibraryBuilder from '../support_code_library_builder'\nimport tryRequire from '../try_require'\nimport { ILogger } from '../logger'\n\nexport async function getSupportCodeLibrary({\n  logger,\n  cwd,\n  newId,\n  requireModules,\n  requirePaths,\n  importPaths,\n}: {\n  logger: ILogger\n  cwd: string\n  newId: IdGenerator.NewId\n  requireModules: string[]\n  requirePaths: string[]\n  importPaths: string[]\n}): Promise<SupportCodeLibrary> {\n  supportCodeLibraryBuilder.reset(cwd, newId, {\n    requireModules,\n    requirePaths,\n    importPaths,\n  })\n\n  requireModules.map((path) => {\n    logger.debug(`Attempting to require code from \"${path}\"`)\n    tryRequire(path)\n  })\n  requirePaths.map((path) => {\n    logger.debug(`Attempting to require code from \"${path}\"`)\n    tryRequire(path)\n  })\n\n  for (const path of importPaths) {\n    logger.debug(`Attempting to import code from \"${path}\"`)\n    await import(pathToFileURL(path).toString())\n  }\n\n  return supportCodeLibraryBuilder.finalize()\n}\n"]}