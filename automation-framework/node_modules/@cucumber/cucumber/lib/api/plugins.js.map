{"version":3,"file":"plugins.js","sourceRoot":"","sources":["../../src/api/plugins.ts"],"names":[],"mappings":";;;;;;AAAA,sCAAyC;AACzC,yDAAsC;AAEtC,uDAAoC;AAO7B,KAAK,UAAU,wBAAwB,CAC5C,MAAe,EACf,WAAgC,EAChC,WAAsC;IAEtC,6CAA6C;IAC7C,MAAM,aAAa,GAAG,IAAI,sBAAa,EAAE,CAAA;IACzC,MAAM,aAAa,CAAC,IAAI,CACtB,aAAa,EACb,gBAAY,EACZ,WAAW,EACX,MAAM,EACN,WAAW,CACZ,CAAA;IACD,OAAO,aAAa,CAAA;AACtB,CAAC;AAfD,4DAeC;AAEM,KAAK,UAAU,wBAAwB;IAC5C,6CAA6C;IAC7C,OAAO,IAAI,sBAAa,EAAE,CAAA;AAC5B,CAAC;AAHD,4DAGC;AAEM,KAAK,UAAU,wBAAwB,CAC5C,MAAe,EACf,aAAgC,EAChC,WAAsC;IAEtC,6CAA6C;IAC7C,MAAM,aAAa,GAAG,IAAI,sBAAa,EAAE,CAAA;IACzC,MAAM,aAAa,CAAC,IAAI,CACtB,aAAa,EACb,iBAAa,EACb,aAAa,CAAC,OAAO,CAAC,OAAO,EAC7B,MAAM,EACN,WAAW,CACZ,CAAA;IACD,MAAM,aAAa,CAAC,IAAI,CACtB,aAAa,EACb,gBAAY,EACZ,aAAa,CAAC,OAAO,EACrB,MAAM,EACN,WAAW,CACZ,CAAA;IACD,OAAO,aAAa,CAAA;AACtB,CAAC;AAtBD,4DAsBC","sourcesContent":["import { PluginManager } from '../plugin'\nimport publishPlugin from '../publish'\nimport { ILogger } from '../logger'\nimport filterPlugin from '../filter'\nimport {\n  IRunConfiguration,\n  IRunEnvironment,\n  ISourcesCoordinates,\n} from './types'\n\nexport async function initializeForLoadSources(\n  logger: ILogger,\n  coordinates: ISourcesCoordinates,\n  environment: Required<IRunEnvironment>\n): Promise<PluginManager> {\n  // eventually we'll load plugin packages here\n  const pluginManager = new PluginManager()\n  await pluginManager.init(\n    'loadSources',\n    filterPlugin,\n    coordinates,\n    logger,\n    environment\n  )\n  return pluginManager\n}\n\nexport async function initializeForLoadSupport(): Promise<PluginManager> {\n  // eventually we'll load plugin packages here\n  return new PluginManager()\n}\n\nexport async function initializeForRunCucumber(\n  logger: ILogger,\n  configuration: IRunConfiguration,\n  environment: Required<IRunEnvironment>\n): Promise<PluginManager> {\n  // eventually we'll load plugin packages here\n  const pluginManager = new PluginManager()\n  await pluginManager.init(\n    'runCucumber',\n    publishPlugin,\n    configuration.formats.publish,\n    logger,\n    environment\n  )\n  await pluginManager.init(\n    'runCucumber',\n    filterPlugin,\n    configuration.sources,\n    logger,\n    environment\n  )\n  return pluginManager\n}\n"]}