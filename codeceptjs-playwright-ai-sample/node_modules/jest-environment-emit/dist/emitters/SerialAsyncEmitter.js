"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SerialAsyncEmitter = void 0;
const ReadonlyEmitterBase_1 = require("./ReadonlyEmitterBase");
const syncEmitterCommons_1 = require("./syncEmitterCommons");
class SerialAsyncEmitter extends ReadonlyEmitterBase_1.ReadonlyEmitterBase {
    #promise = Promise.resolve();
    emit(eventType, event) {
        return this.#enqueue(eventType, event);
    }
    #enqueue(eventType, event) {
        return (this.#promise = this.#promise.then(() => this.#doEmit(eventType, event)));
    }
    async #doEmit(eventType, event) {
        const listeners = [...this._getListeners(eventType)];
        await this._log.trace.complete((0, syncEmitterCommons_1.__EMIT)(event), String(eventType), async () => {
            if (listeners) {
                for (const listener of listeners) {
                    await this._log.trace.complete((0, syncEmitterCommons_1.__INVOKE)(listener), 'invoke', () => listener(event));
                }
            }
        });
    }
}
exports.SerialAsyncEmitter = SerialAsyncEmitter;
//# sourceMappingURL=SerialAsyncEmitter.js.map